initSidebarItems({"fn":[["accept_async","Accepts a new WebSocket connection with the provided stream."],["accept_async_with_config","The same as `accept_async()` but the one can specify a websocket configuration. Please refer to `accept_async()` for more details."],["accept_hdr_async","Accepts a new WebSocket connection with the provided stream."],["accept_hdr_async_with_config","The same as `accept_hdr_async()` but the one can specify a websocket configuration. Please refer to `accept_hdr_async()` for more details."],["client_async","Creates a WebSocket handshake from a request and a stream. For convenience, the user may call this with a url string, a URL, or a `Request`. Calling with `Request` allows the user to add a WebSocket protocol or other custom headers."],["client_async_tls","Creates a WebSocket handshake from a request and a stream, upgrading the stream to TLS if required."],["client_async_with_config","The same as `client_async()` but the one can specify a websocket configuration. Please refer to `client_async()` for more details."],["connect_async","Connect to a given URL."]],"mod":[["stream","Convenience wrapper for streams to switch between plain TCP and TLS at runtime."]],"struct":[["AcceptAsync","Future returned from accept_async() which will resolve once the connection handshake has finished."],["ConnectAsync","Future returned from client_async() which will resolve once the connection handshake has finished."],["WebSocketStream","A wrapper around an underlying raw stream which implements the WebSocket protocol."]],"type":[["MaybeTlsStream","A stream that might be protected with TLS."]]});